services:
  launchers:
    build: collections/launchers/
    container_name: launchers_container
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      dbconf:
        condition: service_healthy


  interactions:
    build: interactions/
    container_name: interface_container
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      - SESSION_SECRET=${SESSION_SECRET}
      - REDIS_URL=redis://:${REDIS_STORE_PASSWORD}@sessions_store:6379/0
    depends_on:
      dbconf:
        condition: service_healthy
      sessions_store:
        condition: service_healthy


  dbconf:
    image: postgres
    restart: always
    container_name: dbconf_container
    volumes:
        - ./storage/selections/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: ${DBCONF_USER}
      POSTGRES_PASSWORD: ${DBCONF_PASS}
      POSTGRES_DB: ${DBCONF_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DBCONF_NAME} -U ${DBCONF_USER}"]
      interval: 2s
      timeout: 5s
      retries: 10


  sessions_store:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_STORE_PASSWORD}
      - REDIS_PORT=6379
      - REDIS_DATABASES=2
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 10